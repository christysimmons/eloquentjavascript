****Higher-Order Functions****


**Flattening**

let arrays = [[1, 2, 3], [4, 5], [6]];

arrays.reduce((a,b) => {return a.concat(b)}, []);

**Your Own Loop**

function loop(val, test, update, body) {
  while (test(val)) {
    body(val);
    val = update(val);
  }  
}


**Everything**

function every1(arto, test) {
  for (let elem of arto) {
   if (test(elem) != true) {return false;}
  }
  return true;
}

function every(arto, test) {
  return !arto.some(elem => !test(elem));  
}

**Dominant Writing Direction**

function dominantDirection(text) {
  let scripts = countBy(text, char => {
    let script = characterScript(char.codePointAt(0));
    return script ? script.direction : "none";
  }).filter(({name}) => name != "none");

  if (scripts == 0) return "No scripts found";

  return scripts.reduce((a, b) => a.count > b.count ? a : b).name; 
}
